# -*- coding: utf-8 -*-
"""MovieRecommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1beAxAKlKcPrMvXA8Qc81RaCK4XejmwWn
"""

#beimportáljuk a megfelelő könyvtárakat
import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

#beimportáljuk a csv-t ami tartalmazza a filmes adatokat
from google.colab import files
uploaded = files.upload()

#beállítjuk a csv-t a df változóra és próba képpen kiíratjuk az első 3 filmet
df = pd.read_csv('IMDB-Movie-Data.csv')
df.head(3)

#hozzáadjuk még a Movie_id változót 
df['Movie_id'] = range(0,1000)

#kiírja hány sorunk van (1000) és hány oszlopunk van (13)
df.shape

#tesztelés ahhoz hogy megjelent a Movie_id a oszlopok között
df.head(3)

#kivesszük az összehasonlításhoz szükséges oszlopokat
columns = ['Actors', 'Director', 'Genre', 'Title', 'Metascore']

#tesztelésként kiíratjuk az első 3 filmet
df[columns].head(3)

##leellenőrizzük hogy nincs null sehol, nincs üres érték mező
df[columns].isnull().values.any()

#kigyűjtjük az összehasonlításhoz fontos adatokat egy mezőbe, az important_features-be
df['important_features'] = df['Actors']+' '+df['Director']+' '+df['Genre']+' '+df['Title'] +' '+str(df['Metascore'])

#majd tesztelésként kiíratjuk az első 3 filmet
df.head(3)

#vektort képzünk az important_features-ből
cm = CountVectorizer().fit_transform(df['important_features'])

#kiszámoljuk a hasonlóságot
cs = cosine_similarity(cm)

#kiíratjuk a vektort
print(cs)

#kiíratjuk hány elemű a vektorunk (1000*1000 -> 1000,1000 fog megjelenni)
cs.shape

#title-be beállítjuk a film címét amelyre keresni szeretnénk

title = 'The Hateful Eight'
#title = 'The Avengers'
#title = 'Inside Out'

movie_id = df[df.Title == title]['Movie_id'].values[0]

#tesztként kiírattam a movie_id-t (több film keresésénél teszt arra, hogy változott-e egy másik film esetében)
#0-tól indul és az első sor pedig a tageket tartalmazza így 2-vel kevesebb az érték mint ami a csv-ben szerepel
print(movie_id)

#összerendezi listába az összehasonlítás adatait
scores = list(enumerate(cs[movie_id]))

#rendezzük az összehasonlítási listát, hogy a legnagyobb hasonlósági értékkel rendelkező film legyen elöl
sorted_scores = sorted(scores, key = lambda x:x[1], reverse = True)

#levesszük azokat a filmeket amiknek 0-ás az egyezése
sorted_scores = sorted_scores[1:]

#próba képpen kiíratom az adatokat [(film_id-ja), (filmünk és a csv-ben található másik filmhez tartozó hasonlósági érték)]
print(sorted_scores)

#kiíratjuk a filmhez leghasonlóbb filmeket
j = 0
print('A leghasonlóbb filmek', title, '-hoz/-hez:\n')
for item in sorted_scores: 
  movie_title = df[df.Movie_id == item[0]]['Title'].values[0]
  print(j+1, movie_title)
  j = j + 1
  # j > x nél az x-et változtatva tudjuk beállítani hány filmet írjon ki, beállítás szerint 5-öt fog kiírni 
  if j > 4:
    break